{
  "definitions": {
    "stopArray": {
      "type": "array",
      "description": "Array of stops this line stops at or travels via.",
      "items": {
        "type": "object",
        "oneOf": [
          {
            "additionalProperties": false,
            "properties": {
              "stops": {
                "type": "number",
                "description": "The stop ID of a stop this line stops at."
              },
              "setsDown": {
                "type": "string",
                "pattern": "^[a-z0-9]+(-[a-z0-9]+)*$",
                "description": "A filter string describing when passengers can alight at this station, e.g. 'direction-up' if only up trains set down passengers here. Default to an empty string (all trains set down)."
              },
              "picksUp": {
                "type": "string",
                "pattern": "^[a-z0-9]+(-[a-z0-9]+)*$",
                "description": "A filter string describing when passengers can board at this station, e.g. 'direction-up' if only up trains pick up passengers here. Default to an empty string (all trains pick up)."
              }
            },
            "required": [
              "stops"
            ]
          },
          {
            "additionalProperties": false,
            "properties": {
              "via": {
                "description": "The ID of a stop this line passes without stopping.",
                "type": "number"
              }
            },
            "required": [
              "via"
            ]
          }
        ]
      }
    },
    "directionDefinition": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "E.g. 'up'.",
          "pattern": "^[a-z0-9]+(-[a-z0-9]+)*$"
        }
      }
    }
  },
  "type": "object",
  "description": "Describes the stops and route this line takes.",
  "properties": {
    "type": {
      "type": "string",
      "description": "Either 'linear', 'y-branch', or 'hook'.",
      "enum": [
        "linear",
        "y-branch",
        "hook"
      ]
    }
  },
  "required": [
    "type"
  ],
  "oneOf": [
    {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "linear",
          "description": "The simplest type of line route."
        },
        "forward": {
          "$ref": "#/definitions/directionDefinition",
          "description": "Direction details to use for stops in the provided order."
        },
        "reverse": {
          "$ref": "#/definitions/directionDefinition",
          "description": "Direction details to use for stops in the reverse order."
        },
        "stops": {
          "$ref": "#/definitions/stopArray"
        }
      },
      "required": [
        "forward",
        "reverse",
        "stops"
      ]
    },
    {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "y-branch",
          "description": "Route with two branch options at one end and a shared section at the other."
        },
        "forward": {
          "$ref": "#/definitions/directionDefinition",
          "description": "Direction details to use for stops in the provided order."
        },
        "reverse": {
          "$ref": "#/definitions/directionDefinition",
          "description": "Direction details to use for stops in the reverse order."
        },
        "firstBranch": {
          "type": "object",
          "description": "Stops, ordered from the end of the branch to the stop before the shared section begins.",
          "additionalProperties": false,
          "properties": {
            "id": {
              "type": "string",
              "description": "An ID for this branch, e.g. 'echuca' or 'swan-hill'.",
              "pattern": "^[a-z0-9]+(-[a-z0-9]+)*$"
            },
            "stops": {
              "$ref": "#/definitions/stopArray",
              "description": "Stops, ordered from the end of the branch to the stop before the shared section begins."
            }
          }
        },
        "secondBranch": {
          "type": "object",
          "description": "Stops, ordered from the end of the branch to the stop before the shared section begins.",
          "additionalProperties": false,
          "properties": {
            "id": {
              "type": "string",
              "description": "An ID for this branch, e.g. 'echuca' or 'swan-hill'.",
              "pattern": "^[a-z0-9]+(-[a-z0-9]+)*$"
            },
            "stops": {
              "$ref": "#/definitions/stopArray",
              "description": "Stops, ordered from the end of the branch to the stop before the shared section begins."
            }
          }
        },
        "shared": {
          "$ref": "#/definitions/stopArray",
          "description": "Stops, ordered the first shared stop to the end of the 'fork handle'."
        }
      },
      "required": [
        "forward",
        "reverse",
        "firstBranch",
        "secondBranch",
        "shared"
      ]
    },
    {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "hook",
          "description": "Route with a balloon loop section where services terminate inside the loop."
        },
        "forward": {
          "$ref": "#/definitions/directionDefinition",
          "description": "Direction details to use for stops in the provided order."
        },
        "reverse": {
          "$ref": "#/definitions/directionDefinition",
          "description": "Direction details to use for stops in the reverse order."
        },
        "stops": {
          "$ref": "#/definitions/stopArray",
          "description": "Stops, ordered from 'hook handle' end to the last stop before hooked section."
        },
        "hooked": {
          "$ref": "#/definitions/stopArray",
          "description": "Stops that make up the hooked section, ordered from start of hook to terminus."
        },
        "direct": {
          "$ref": "#/definitions/stopArray",
          "description": "Stops that travel directly to the terminus (avoiding the hooked section), ordered with the terminus last."
        }
      },
      "required": [
        "forward",
        "reverse",
        "stops",
        "hooked",
        "direct"
      ]
    }
  ]
}
